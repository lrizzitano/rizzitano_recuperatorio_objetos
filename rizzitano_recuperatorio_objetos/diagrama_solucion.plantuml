@startuml torneoDeMagos

abstract class Participante {
    poderTotal()
    esVencidoPor(unParticipante)
    desafiar(unParticipante)
    ganarEnergiaMagica(unaCantidad)
    perderAnte(unParticipante)
}

class Mago {
    nombre
    poderInnato
    resistenciaMagica
    energiaMagica
    objetosMagicos
    categoria
    --
    poderTotal()
    desafiar(unParticipante)
    esVencidoPor(unParticipante)
}

class Gremio {
    miembros
    --
    poderTotal()
    energiaMagica()
    desafiar(unParticipante)
    esVencidoPor(unParticipante)
}

class Categoria {
    multiplicadorDeResistencia
    porcentajeDePerdida
    --
    esVencidoPor(atacado, atacante)
    transferirEnergiaMagica(atacado, atacante)
}

object inmortal {
    esVencidoPor(atacado, atacante)
}

interface ObjetoMagico {
    poderAportado(unMago)
}

abstract class ObjetoMagicoConPoderBase {
    poderBase
    --
    poderAportado(unMago)
}

class Varita {
    poderAportado(unMago)
}

class Tunica {
    poderAportado(unMago)
}

class TunicaEpica {
    poderAportado(unMago)
}

class Amuleto {
    poderAportado(unMago)
}

object ojota {
    poderAportado(unMago)
}

Mago -u-|> Participante
Gremio -u-|> Participante
Gremio -> "*" Mago

Mago --> "*" ObjetoMagico
Mago --> Categoria

Amuleto .u.|> ObjetoMagico
ojota .u.|> ObjetoMagico
ObjetoMagicoConPoderBase .u.|> ObjetoMagico

Varita -u-|> ObjetoMagicoConPoderBase
Tunica -u-|> ObjetoMagicoConPoderBase
TunicaEpica -u-|> Tunica

aprendiz .u.|> Categoria
veterano .u.|> Categoria
inmortal .u.|> Categoria

@enduml